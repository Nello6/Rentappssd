Id,Title,Category,Diagram,Interaction,Priority,State,Changed By,Description,Justification,Last Modified
11,Spoofing the apache-tomcat-9.0.12 Process,Spoofing,,HTTP,High,Not Started,,apache-tomcat-9.0.12 may be spoofed by an attacker and this may lead to unauthorized access to keycloak. Consider using a standard authentication mechanism to identify the source process.,,Generated
12,Spoofing the keycloak Process,Spoofing,,HTTP,High,Not Started,,keycloak may be spoofed by an attacker and this may lead to information disclosure by apache-tomcat-9.0.12. Consider using a standard authentication mechanism to identify the destination process.,,Generated
13,Potential Lack of Input Validation for keycloak,Tampering,,HTTP,High,Not Started,,Data flowing across HTTP may be tampered with by an attacker. This may lead to a denial of service attack against keycloak or an elevation of privilege attack against keycloak or an information disclosure by keycloak. Failure to verify that input is as expected is a root cause of a very large number of exploitable issues. Consider all paths and the way they handle data. Verify that all input is verified for correctness using an approved list input validation approach.,,Generated
14,apache-tomcat-9.0.12 Process Memory Tampered,Tampering,,HTTP,High,Not Started,,"If apache-tomcat-9.0.12 is given access to memory, such as shared memory or pointers, or is given the ability to control what keycloak executes (for example, passing back a function pointer.), then apache-tomcat-9.0.12 can tamper with keycloak. Consider if the function could work with less access to memory, such as passing data rather than pointers. Copy in data provided, and then validate it.",,Generated
15,Potential Data Repudiation by keycloak,Repudiation,,HTTP,High,Not Started,,"keycloak claims that it did not receive data from a source outside the trust boundary. Consider using logging or auditing to record the source, time, and summary of the received data.",,Generated
16,Data Flow Sniffing,Information Disclosure,,HTTP,High,Not Started,,"Data flowing across HTTP may be sniffed by an attacker. Depending on what type of data an attacker can read, it may be used to attack other parts of the system or simply be a disclosure of information leading to compliance violations. Consider encrypting the data flow.",,Generated
17,Potential Process Crash or Stop for keycloak,Denial Of Service,,HTTP,High,Not Started,,"keycloak crashes, halts, stops or runs slowly; in all cases violating an availability metric.",,Generated
18,Data Flow HTTP Is Potentially Interrupted,Denial Of Service,,HTTP,High,Not Started,,An external agent interrupts data flowing across a trust boundary in either direction.,,Generated
19,Elevation Using Impersonation,Elevation Of Privilege,,HTTP,High,Not Started,,keycloak may be able to impersonate the context of apache-tomcat-9.0.12 in order to gain additional privilege.,,Generated
20,keycloak May be Subject to Elevation of Privilege Using Remote Code Execution,Elevation Of Privilege,,HTTP,High,Not Started,,apache-tomcat-9.0.12 may be able to remotely execute code for keycloak.,,Generated
21,Elevation by Changing the Execution Flow in keycloak,Elevation Of Privilege,,HTTP,High,Not Started,,An attacker may pass data into keycloak in order to change the flow of program execution within keycloak to the attacker's choosing.,,Generated
32,Elevation by Changing the Execution Flow in Vault,Elevation Of Privilege,,HTTP,High,Not Started,,An attacker may pass data into Vault in order to change the flow of program execution within Vault to the attacker's choosing.,,Generated
31,Vault May be Subject to Elevation of Privilege Using Remote Code Execution,Elevation Of Privilege,,HTTP,High,Not Started,,rentapp-service may be able to remotely execute code for Vault.,,Generated
30,Elevation Using Impersonation,Elevation Of Privilege,,HTTP,High,Not Started,,Vault may be able to impersonate the context of rentapp-service in order to gain additional privilege.,,Generated
29,Data Flow HTTP Is Potentially Interrupted,Denial Of Service,,HTTP,High,Not Started,,An external agent interrupts data flowing across a trust boundary in either direction.,,Generated
28,Potential Process Crash or Stop for Vault,Denial Of Service,,HTTP,High,Not Started,,"Vault crashes, halts, stops or runs slowly; in all cases violating an availability metric.",,Generated
27,Data Flow Sniffing,Information Disclosure,,HTTP,High,Not Started,,"Data flowing across HTTP may be sniffed by an attacker. Depending on what type of data an attacker can read, it may be used to attack other parts of the system or simply be a disclosure of information leading to compliance violations. Consider encrypting the data flow.",,Generated
26,Potential Data Repudiation by Vault,Repudiation,,HTTP,High,Not Started,,"Vault claims that it did not receive data from a source outside the trust boundary. Consider using logging or auditing to record the source, time, and summary of the received data.",,Generated
25,rentapp-service Process Memory Tampered,Tampering,,HTTP,High,Not Started,,"If rentapp-service is given access to memory, such as shared memory or pointers, or is given the ability to control what Vault executes (for example, passing back a function pointer.), then rentapp-service can tamper with Vault. Consider if the function could work with less access to memory, such as passing data rather than pointers. Copy in data provided, and then validate it.",,Generated
24,Potential Lack of Input Validation for Vault,Tampering,,HTTP,High,Not Started,,Data flowing across HTTP may be tampered with by an attacker. This may lead to a denial of service attack against Vault or an elevation of privilege attack against Vault or an information disclosure by Vault. Failure to verify that input is as expected is a root cause of a very large number of exploitable issues. Consider all paths and the way they handle data. Verify that all input is verified for correctness using an approved list input validation approach.,,Generated
23,Spoofing the Vault Process,Spoofing,,HTTP,High,Not Started,,Vault may be spoofed by an attacker and this may lead to information disclosure by rentapp-service. Consider using a standard authentication mechanism to identify the destination process.,,Generated
22,Spoofing the rentapp-service Process,Spoofing,,HTTP,High,Not Started,,rentapp-service may be spoofed by an attacker and this may lead to unauthorized access to Vault. Consider using a standard authentication mechanism to identify the source process.,,Generated
33,Spoofing the rentapp-service Process,Spoofing,,HTTP,High,Not Started,,rentapp-service may be spoofed by an attacker and this may lead to unauthorized access to Microsoft SQL Server. Consider using a standard authentication mechanism to identify the source process.,,Generated
34,Spoofing of Destination Data Store Microsoft SQL Server,Spoofing,,HTTP,High,Not Started,,Microsoft SQL Server may be spoofed by an attacker and this may lead to data being written to the attacker's target instead of Microsoft SQL Server. Consider using a standard authentication mechanism to identify the destination data store.,,Generated
35,Potential SQL Injection Vulnerability for Microsoft SQL Server,Tampering,,HTTP,High,Not Started,,SQL injection is an attack in which malicious code is inserted into strings that are later passed to an instance of SQL Server for parsing and execution. Any procedure that constructs SQL statements should be reviewed for injection vulnerabilities because SQL Server will execute all syntactically valid queries that it receives. Even parameterized data can be manipulated by a skilled and determined attacker.,,Generated
36,The Microsoft SQL Server Data Store Could Be Corrupted,Tampering,,HTTP,High,Not Started,,Data flowing across HTTP may be tampered with by an attacker. This may lead to corruption of Microsoft SQL Server. Ensure the integrity of the data flow to the data store.,,Generated
37,Data Store Denies Microsoft SQL Server Potentially Writing Data,Repudiation,,HTTP,High,Not Started,,"Microsoft SQL Server claims that it did not write data received from an entity on the other side of the trust boundary. Consider using logging or auditing to record the source, time, and summary of the received data.",,Generated
38,Data Flow Sniffing,Information Disclosure,,HTTP,High,Not Started,,"Data flowing across HTTP may be sniffed by an attacker. Depending on what type of data an attacker can read, it may be used to attack other parts of the system or simply be a disclosure of information leading to compliance violations. Consider encrypting the data flow.",,Generated
39,Potential Excessive Resource Consumption for rentapp-service or Microsoft SQL Server,Denial Of Service,,HTTP,High,Not Started,,"Does rentapp-service or Microsoft SQL Server take explicit steps to control resource consumption? Resource consumption attacks can be hard to deal with, and there are times that it makes sense to let the OS do the job. Be careful that your resource requests don't deadlock, and that they do timeout.",,Generated
40,Data Flow HTTP Is Potentially Interrupted,Denial Of Service,,HTTP,High,Not Started,,An external agent interrupts data flowing across a trust boundary in either direction.,,Generated
41,Data Store Inaccessible,Denial Of Service,,HTTP,High,Not Started,,An external agent prevents access to a data store on the other side of the trust boundary.,,Generated
42,keycloak Process Memory Tampered,Tampering,,SMTPS,High,Not Started,,"If keycloak is given access to memory, such as shared memory or pointers, or is given the ability to control what Mailjet executes (for example, passing back a function pointer.), then keycloak can tamper with Mailjet. Consider if the function could work with less access to memory, such as passing data rather than pointers. Copy in data provided, and then validate it.",,Generated
43,Potential Data Repudiation by Mailjet,Repudiation,,SMTPS,High,Not Started,,"Mailjet claims that it did not receive data from a source outside the trust boundary. Consider using logging or auditing to record the source, time, and summary of the received data.",,Generated
44,Weak Authentication Scheme,Information Disclosure,,SMTPS,High,Not Started,,"Custom authentication schemes are susceptible to common weaknesses such as weak credential change management, credential equivalence, easily guessable credentials, null credentials, downgrade authentication or a weak credential change management system. Consider the impact and potential mitigations for your custom authentication scheme.",,Generated
45,Potential Process Crash or Stop for Mailjet,Denial Of Service,,SMTPS,High,Not Started,,"Mailjet crashes, halts, stops or runs slowly; in all cases violating an availability metric.",,Generated
46,Data Flow SMTPS Is Potentially Interrupted,Denial Of Service,,SMTPS,High,Not Started,,An external agent interrupts data flowing across a trust boundary in either direction.,,Generated
47,Elevation Using Impersonation,Elevation Of Privilege,,SMTPS,High,Not Started,,Mailjet may be able to impersonate the context of keycloak in order to gain additional privilege.,,Generated
48,Mailjet May be Subject to Elevation of Privilege Using Remote Code Execution,Elevation Of Privilege,,SMTPS,High,Not Started,,keycloak may be able to remotely execute code for Mailjet.,,Generated
49,Elevation by Changing the Execution Flow in Mailjet,Elevation Of Privilege,,SMTPS,High,Not Started,,An attacker may pass data into Mailjet in order to change the flow of program execution within Mailjet to the attacker's choosing.,,Generated
50,Cross Site Request Forgery,Elevation Of Privilege,,SMTPS,High,Not Started,,"Cross-site request forgery (CSRF or XSRF) is a type of attack in which an attacker forces a user's browser to make a forged request to a vulnerable site by exploiting an existing trust relationship between the browser and the vulnerable web site.  In a simple scenario, a user is logged in to web site A using a cookie as a credential.  The other browses to web site B.  Web site B returns a page with a hidden form that posts to web site A.  Since the browser will carry the user's cookie to web site A, web site B now can take any action on web site A, for example, adding an admin to an account.  The attack can be used to exploit any requests that the browser automatically authenticates, e.g. by session cookie, integrated authentication, IP whitelisting. The attack can be carried out in many ways such as by luring the victim to a site under control of the attacker, getting the user to click a link in a phishing email, or hacking a reputable web site that the victim will visit. The issue can only be resolved on the server side by requiring that all authenticated state-changing requests include an additional piece of secret payload (canary or CSRF token) which is known only to the legitimate web site and the browser and which is protected in transit through SSL/TLS. See the Forgery Protection property on the flow stencil for a list of mitigations.",,Generated
51,keycloak Process Memory Tampered,Tampering,,HTTPS,High,Not Started,,"If keycloak is given access to memory, such as shared memory or pointers, or is given the ability to control what GoogleAuth executes (for example, passing back a function pointer.), then keycloak can tamper with GoogleAuth. Consider if the function could work with less access to memory, such as passing data rather than pointers. Copy in data provided, and then validate it.",,Generated
52,Potential Data Repudiation by GoogleAuth,Repudiation,,HTTPS,High,Not Started,,"GoogleAuth claims that it did not receive data from a source outside the trust boundary. Consider using logging or auditing to record the source, time, and summary of the received data.",,Generated
53,Weak Authentication Scheme,Information Disclosure,,HTTPS,High,Not Started,,"Custom authentication schemes are susceptible to common weaknesses such as weak credential change management, credential equivalence, easily guessable credentials, null credentials, downgrade authentication or a weak credential change management system. Consider the impact and potential mitigations for your custom authentication scheme.",,Generated
54,Potential Process Crash or Stop for GoogleAuth,Denial Of Service,,HTTPS,High,Not Started,,"GoogleAuth crashes, halts, stops or runs slowly; in all cases violating an availability metric.",,Generated
55,Data Flow HTTPS Is Potentially Interrupted,Denial Of Service,,HTTPS,High,Not Started,,An external agent interrupts data flowing across a trust boundary in either direction.,,Generated
56,Elevation Using Impersonation,Elevation Of Privilege,,HTTPS,High,Not Started,,GoogleAuth may be able to impersonate the context of keycloak in order to gain additional privilege.,,Generated
57,GoogleAuth May be Subject to Elevation of Privilege Using Remote Code Execution,Elevation Of Privilege,,HTTPS,High,Not Started,,keycloak may be able to remotely execute code for GoogleAuth.,,Generated
58,Elevation by Changing the Execution Flow in GoogleAuth,Elevation Of Privilege,,HTTPS,High,Not Started,,An attacker may pass data into GoogleAuth in order to change the flow of program execution within GoogleAuth to the attacker's choosing.,,Generated
59,Cross Site Request Forgery,Elevation Of Privilege,,HTTPS,High,Not Started,,"Cross-site request forgery (CSRF or XSRF) is a type of attack in which an attacker forces a user's browser to make a forged request to a vulnerable site by exploiting an existing trust relationship between the browser and the vulnerable web site.  In a simple scenario, a user is logged in to web site A using a cookie as a credential.  The other browses to web site B.  Web site B returns a page with a hidden form that posts to web site A.  Since the browser will carry the user's cookie to web site A, web site B now can take any action on web site A, for example, adding an admin to an account.  The attack can be used to exploit any requests that the browser automatically authenticates, e.g. by session cookie, integrated authentication, IP whitelisting. The attack can be carried out in many ways such as by luring the victim to a site under control of the attacker, getting the user to click a link in a phishing email, or hacking a reputable web site that the victim will visit. The issue can only be resolved on the server side by requiring that all authenticated state-changing requests include an additional piece of secret payload (canary or CSRF token) which is known only to the legitimate web site and the browser and which is protected in transit through SSL/TLS. See the Forgery Protection property on the flow stencil for a list of mitigations.",,Generated
60,keycloak Process Memory Tampered,Tampering,,HTTPS,High,Not Started,,"If keycloak is given access to memory, such as shared memory or pointers, or is given the ability to control what FacebookAuth executes (for example, passing back a function pointer.), then keycloak can tamper with FacebookAuth. Consider if the function could work with less access to memory, such as passing data rather than pointers. Copy in data provided, and then validate it.",,Generated
61,Potential Data Repudiation by FacebookAuth,Repudiation,,HTTPS,High,Not Started,,"FacebookAuth claims that it did not receive data from a source outside the trust boundary. Consider using logging or auditing to record the source, time, and summary of the received data.",,Generated
62,Weak Authentication Scheme,Information Disclosure,,HTTPS,High,Not Started,,"Custom authentication schemes are susceptible to common weaknesses such as weak credential change management, credential equivalence, easily guessable credentials, null credentials, downgrade authentication or a weak credential change management system. Consider the impact and potential mitigations for your custom authentication scheme.",,Generated
63,Potential Process Crash or Stop for FacebookAuth,Denial Of Service,,HTTPS,High,Not Started,,"FacebookAuth crashes, halts, stops or runs slowly; in all cases violating an availability metric.",,Generated
64,Data Flow HTTPS Is Potentially Interrupted,Denial Of Service,,HTTPS,High,Not Started,,An external agent interrupts data flowing across a trust boundary in either direction.,,Generated
65,Elevation Using Impersonation,Elevation Of Privilege,,HTTPS,High,Not Started,,FacebookAuth may be able to impersonate the context of keycloak in order to gain additional privilege.,,Generated
66,FacebookAuth May be Subject to Elevation of Privilege Using Remote Code Execution,Elevation Of Privilege,,HTTPS,High,Not Started,,keycloak may be able to remotely execute code for FacebookAuth.,,Generated
67,Elevation by Changing the Execution Flow in FacebookAuth,Elevation Of Privilege,,HTTPS,High,Not Started,,An attacker may pass data into FacebookAuth in order to change the flow of program execution within FacebookAuth to the attacker's choosing.,,Generated
68,Cross Site Request Forgery,Elevation Of Privilege,,HTTPS,High,Not Started,,"Cross-site request forgery (CSRF or XSRF) is a type of attack in which an attacker forces a user's browser to make a forged request to a vulnerable site by exploiting an existing trust relationship between the browser and the vulnerable web site.  In a simple scenario, a user is logged in to web site A using a cookie as a credential.  The other browses to web site B.  Web site B returns a page with a hidden form that posts to web site A.  Since the browser will carry the user's cookie to web site A, web site B now can take any action on web site A, for example, adding an admin to an account.  The attack can be used to exploit any requests that the browser automatically authenticates, e.g. by session cookie, integrated authentication, IP whitelisting. The attack can be carried out in many ways such as by luring the victim to a site under control of the attacker, getting the user to click a link in a phishing email, or hacking a reputable web site that the victim will visit. The issue can only be resolved on the server side by requiring that all authenticated state-changing requests include an additional piece of secret payload (canary or CSRF token) which is known only to the legitimate web site and the browser and which is protected in transit through SSL/TLS. See the Forgery Protection property on the flow stencil for a list of mitigations.",,Generated
69,keycloak Process Memory Tampered,Tampering,,HTTPS,High,Not Started,,"If keycloak is given access to memory, such as shared memory or pointers, or is given the ability to control what Google Recaptcha executes (for example, passing back a function pointer.), then keycloak can tamper with Google Recaptcha. Consider if the function could work with less access to memory, such as passing data rather than pointers. Copy in data provided, and then validate it.",,Generated
70,Potential Data Repudiation by Google Recaptcha,Repudiation,,HTTPS,High,Not Started,,"Google Recaptcha claims that it did not receive data from a source outside the trust boundary. Consider using logging or auditing to record the source, time, and summary of the received data.",,Generated
71,Weak Authentication Scheme,Information Disclosure,,HTTPS,High,Not Started,,"Custom authentication schemes are susceptible to common weaknesses such as weak credential change management, credential equivalence, easily guessable credentials, null credentials, downgrade authentication or a weak credential change management system. Consider the impact and potential mitigations for your custom authentication scheme.",,Generated
72,Potential Process Crash or Stop for Google Recaptcha,Denial Of Service,,HTTPS,High,Not Started,,"Google Recaptcha crashes, halts, stops or runs slowly; in all cases violating an availability metric.",,Generated
73,Data Flow HTTPS Is Potentially Interrupted,Denial Of Service,,HTTPS,High,Not Started,,An external agent interrupts data flowing across a trust boundary in either direction.,,Generated
74,Elevation Using Impersonation,Elevation Of Privilege,,HTTPS,High,Not Started,,Google Recaptcha may be able to impersonate the context of keycloak in order to gain additional privilege.,,Generated
75,Google Recaptcha May be Subject to Elevation of Privilege Using Remote Code Execution,Elevation Of Privilege,,HTTPS,High,Not Started,,keycloak may be able to remotely execute code for Google Recaptcha.,,Generated
76,Elevation by Changing the Execution Flow in Google Recaptcha,Elevation Of Privilege,,HTTPS,High,Not Started,,An attacker may pass data into Google Recaptcha in order to change the flow of program execution within Google Recaptcha to the attacker's choosing.,,Generated
77,Cross Site Request Forgery,Elevation Of Privilege,,HTTPS,High,Not Started,,"Cross-site request forgery (CSRF or XSRF) is a type of attack in which an attacker forces a user's browser to make a forged request to a vulnerable site by exploiting an existing trust relationship between the browser and the vulnerable web site.  In a simple scenario, a user is logged in to web site A using a cookie as a credential.  The other browses to web site B.  Web site B returns a page with a hidden form that posts to web site A.  Since the browser will carry the user's cookie to web site A, web site B now can take any action on web site A, for example, adding an admin to an account.  The attack can be used to exploit any requests that the browser automatically authenticates, e.g. by session cookie, integrated authentication, IP whitelisting. The attack can be carried out in many ways such as by luring the victim to a site under control of the attacker, getting the user to click a link in a phishing email, or hacking a reputable web site that the victim will visit. The issue can only be resolved on the server side by requiring that all authenticated state-changing requests include an additional piece of secret payload (canary or CSRF token) which is known only to the legitimate web site and the browser and which is protected in transit through SSL/TLS. See the Forgery Protection property on the flow stencil for a list of mitigations.",,Generated
